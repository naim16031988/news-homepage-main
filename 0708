import zmq
import cv2
import numpy as np
import time

# Set up ZeroMQ subscriber to receive frames from dispatcher
context = zmq.Context()
socket = context.socket(zmq.SUB)
socket.connect("tcp://10.18.6.11:6000")  # Replace with your dispatcher IP/port
socket.setsockopt_string(zmq.SUBSCRIBE, '')

last_time = time.time()
frame_count = 0

while True:
    try:
        # Receive multipart message: [frame_id, agent_name, jpg_buffer]
        parts = socket.recv_multipart()
        if len(parts) != 3:
            print("⚠️  Incomplete frame received, skipping.")
            continue

        frame_id, agent_name, jpg_buffer = parts
        jpg_array = np.frombuffer(jpg_buffer, dtype=np.uint8)
        frame = cv2.imdecode(jpg_array, cv2.IMREAD_COLOR)

        if frame is None:
            print("❌ Failed to decode frame")
            continue

        # Annotate frame with agent name
        cv2.putText(frame, f"From: {agent_name.decode()}", (10, 30),
                    cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)

        # Show FPS
        frame_count += 1
        now = time.time()
        if now - last_time >= 1.0:
            fps = frame_count / (now - last_time)
            last_time = now
            frame_count = 0
        cv2.putText(frame, f"FPS: {fps:.2f}", (10, 70),
                    cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 255), 2)

        # Display frame
        cv2.imshow("Unified Viewer", frame)

        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    except Exception as e:
        print(f"⚠️ Error in viewer: {e}")

cv2.destroyAllWindows()
socket.close()
context.term()
